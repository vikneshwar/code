#include <stdio.h>
#include <math.h>
int binary_decimal(int n);
int decimal_binary(int n);
int main()
{
   int n;
   char c;
   printf("Instructions:\n");
   printf("1. Enter alphabet 'd' to convert binary to decimal.\n");
   printf("2. Enter alphabet 'b' to convert decimal to binary.\n");
   scanf("%c",&c);
   if (c =='d' || c == 'D')
   {
       printf("Enter a binary number: ");
       scanf("%d", &n);
       printf("%d in binary = %d in decimal", n, binary_decimal(n));
   }
   if (c =='b' || c == 'B')
   {
       printf("Enter a decimal number: ");
       scanf("%d", &n);
       printf("%d in decimal = %d in binary", n, decimal_binary(n));
   }
   return 0;
}

int decimal_binary(int n)  /* Function to convert decimal to binary.*/
{
    int rem, i=1, binary=0;
    while (n!=0)
    {
        rem=n%2;
        n/=2;
        binary+=rem*i;
        i*=10;
    }
    return binary;
}

int binary_decimal(int n) /* Function to convert binary to decimal.*/

{
    int decimal=0, i=0, rem;
    while (n!=0)
    {
        rem = n%10;
        n/=10;
        decimal += rem*pow(2,i);
        ++i;
    }
    return decimal;
}
/*
Binary number system represent numeric value using two different digits 0 and 1 . It has base 2 

Decimal Number system represent numeric value using ten different digits 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 . It has base 10 

Decimal to Binary 
Ex : Find binary value for 24
Solution : 
	24/2 = 12 rem = 0
	12/2 = 6  rem = 0 
	6/2  = 3  rem = 0
	3/2  = 1  rem = 1 
	1/2  = 0  rem = 1
Now write the reminder from downwards to get binary value , So 
Decimal(24) == Binary(11000) 

Binary to Decimal 
Ex : Find decimal value of (11000)
Solution :
	Write the number from backwards 
	0 -> 0 x pow(2,0) = 0  	
	0 -> 0 x pow(2,1) = 0 
	0 -> 0 x pow(2,2) = 0 
 	1 -> 1 x pow(2,3) = 8 
	1 -> 1 x pow(2,4) = 16
			---------
			    24 (add the bumbers)
			---------
Note : read pow(a,b) as "a to the power of b"
*/

/*
Program Explanation : 
a) function decimal_binary 
    
   1)In the while loop we divivde the number until it becomes 0
   2)First line in the loop , we perform mod operation to get the reminder and store it in "rem" 
   3)Next , we divide the number by 2 to get the quotient and store it in same variable "n"
   4)Next two lines increase the place value by 10 each time 

d) function binary_decimal 
   1)In the while loop we divide the number until it becomes 0 
   2)Then , we mod by 10 to get the last digit in the number
	Ex: 1101 % 10 = 1  (last digit) 
   3)Then , we divide by 10 to remove the last digit in the number 
 	Ex: 1101 / 10 = 110(last digit eliminated)
   4)Then we follow the conversion logic 
*/

